<Window x:Class="SIGENCEScenarioTool.Windows.MainWindow.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:gmap="clr-namespace:GMap.NET.WindowsPresentation;assembly=GMap.NET.WindowsPresentation" xmlns:provider="clr-namespace:GMap.NET.MapProviders;assembly=GMap.NET.Core" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:cmd="clr-namespace:SIGENCEScenarioTool.Commands" xmlns:models="clr-namespace:SIGENCEScenarioTool.Models" mc:Ignorable="d" Title="SIGENCE Scenario Tool" Height="900" Width="900" WindowStartupLocation="CenterScreen" WindowState="Maximized">
    <Window.Resources>
        <ObjectDataProvider x:Key="eRxTxType" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:RxTxType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="eAntennaType" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:AntennaType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Menu Grid.Row="0">
            <MenuItem Header="_SIGENCE Scenario Tool">
                <MenuItem Header="_New File" Command="{x:Static ApplicationCommands.New}" />
                <Separator />
                <MenuItem Header="_Open File" Command="{x:Static ApplicationCommands.Open}" />
                <Separator />
                <MenuItem Header="_Save File" Command="{x:Static ApplicationCommands.Save}" />
                <MenuItem Header="_Save File As" Command="{x:Static ApplicationCommands.SaveAs}" />
                <Separator />
                <MenuItem Header="Quit" Command="{x:Static ApplicationCommands.Close}" />
            </MenuItem>
            <MenuItem Header="_Actions">
                <MenuItem Header="_Create RFDevice" Command="{x:Static cmd:RegisteredCommands.CreateRFDevice}" />
                <MenuItem Header="_Delete RFDevice" Command="{x:Static cmd:RegisteredCommands.DeleteRFDevice}" />
                <Separator />
                <MenuItem Header="_Export RFDevices" Command="{x:Static cmd:RegisteredCommands.ExportRFDevice}" />
                <MenuItem Header="_Import RFDevices" Command="{x:Static cmd:RegisteredCommands.ImportRFDevice}" />
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Header="_Zoom To RFDevice" Command="{x:Static cmd:RegisteredCommands.ZoomToRFDevice}" />
                <MenuItem Header="_Create Screenshot From Map" Command="{x:Static cmd:RegisteredCommands.CreateScreenshot}" />
                <MenuItem Header="_Send Data via UDP" Command="{x:Static cmd:RegisteredCommands.SendDataUDP}" />
            </MenuItem>
            <MenuItem Header="_Extras">
                <MenuItem Header="_Settings" IsEnabled="False" />
            </MenuItem>
            <MenuItem Header="_Test">
                <MenuItem Header="_Charting Test" Click="MenuItem_ChartingTest_Click" />
                <Separator />
                <MenuItem Header="Create Randomized RFDevices">
                    <MenuItem Header="50" Tag="50" Click="MenuItem_CreateSomeRandomizedRFDevices_Click" />
                    <MenuItem Header="100" Tag="100" Click="MenuItem_CreateSomeRandomizedRFDevices_Click" />
                    <MenuItem Header="200" Tag="200" Click="MenuItem_CreateSomeRandomizedRFDevices_Click" />
                    <MenuItem Header="500" Tag="500" Click="MenuItem_CreateSomeRandomizedRFDevices_Click" />
                    <MenuItem Header="1000" Tag="1000" Click="MenuItem_CreateSomeRandomizedRFDevices_Click" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Help">
                <!--<MenuItem Header="_Display Help" Command="{x:Static ApplicationCommands.Help}" IsEnabled="False" />-->
                <MenuItem Header="_Cheat Sheet" Command="{x:Static cmd:RegisteredCommands.OpenCheatSheet}" />
                <MenuItem Header="_About" IsEnabled="False" />
            </MenuItem>
        </Menu>

        <ToolBar Grid.Row="1">
            <Label Content="MapProvider" />
            <ComboBox x:Name="cbMapProvider" Width="120" SelectedItem="{Binding MapProvider, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="3" />
            <Separator />
            <ToggleButton Content="Display Center" IsChecked="{Binding ShowCenter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="3" />
            <Separator />
            <Button Content="Create RFDevice" Command="{x:Static cmd:RegisteredCommands.CreateRFDevice}" />
            <Separator />
            <Button Content="Delete RFDevice" Command="{x:Static cmd:RegisteredCommands.DeleteRFDevice}" />
            <Separator />
            <Button Content="Zoom To RFDevice" Command="{x:Static cmd:RegisteredCommands.ZoomToRFDevice}" />
            <Separator />
            <Button Content="Create Screenshot" Command="{x:Static cmd:RegisteredCommands.CreateScreenshot}" />
            <Separator />
            <Button Content="Send Data via UDP" Command="{x:Static cmd:RegisteredCommands.SendDataUDP}" />
            <Separator />
        </ToolBar>

        <gmap:GMapControl x:Name="mcMapControl" Grid.Row="2" OnPositionChanged="MapControl_OnPositionChanged" MouseLeftButtonDown="MapControl_MouseLeftButtonDown" OnMapZoomChanged="MapControl_OnMapZoomChanged" />

        <TabControl Grid.Row="3" Margin="5">
            <TabItem Header="Scenario Data">
                <DataGrid x:Name="dgRFDevices" ItemsSource="{Binding RFDevicesCollection}" IsReadOnly="False" AlternationCount="2" AlternatingRowBackground="AliceBlue" AutoGenerateColumns="False" FontFamily="Courier New" FontSize="14" CanUserAddRows="False" CanUserDeleteRows="False" SelectionMode="Extended" KeyDown="DataGrid_KeyDown">
                    <DataGrid.Columns>

                        <DataGridCheckBoxColumn Header="" Binding="{Binding IsSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <DataGridCheckBoxColumn.ElementStyle>
                                <Style TargetType="CheckBox">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </DataGridCheckBoxColumn.ElementStyle>
                        </DataGridCheckBoxColumn>

                        <DataGridTextColumn Header="Id" Binding="{Binding Id,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Name" Binding="{Binding Name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="StartTime" Binding="{Binding StartTime,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Latitude" Binding="{Binding Latitude}" IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Longitude" Binding="{Binding Longitude}" IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Altitude" Binding="{Binding Altitude,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Roll" Binding="{Binding Roll,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Pitch" Binding="{Binding Pitch,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Yaw" Binding="{Binding Yaw,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>


                        <DataGridComboBoxColumn Header="RxTxType" SelectedItemBinding="{Binding RxTxType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource eRxTxType}}">
                            <DataGridComboBoxColumn.ElementStyle>
                                <Style TargetType="ComboBox">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </DataGridComboBoxColumn.ElementStyle>
                        </DataGridComboBoxColumn>

                        <DataGridComboBoxColumn Header="AntennaType" SelectedItemBinding="{Binding AntennaType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource eAntennaType}}">
                            <DataGridComboBoxColumn.ElementStyle>
                                <Style TargetType="ComboBox">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </DataGridComboBoxColumn.ElementStyle>
                        </DataGridComboBoxColumn>

                        <DataGridTextColumn Header="CenterFrequency" Binding="{Binding CenterFrequency,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Bandwith" Binding="{Binding Bandwith,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Gain" Binding="{Binding Gain,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="SignalToNoiseRatio" Binding="{Binding SignalToNoiseRatio,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Remark" Binding="{Binding Remark,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="Data Receiver">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <ToolBar Grid.Row="0">
                        <Button Content="Clear" Click="Button_ClearReceivedData" />
                        <Separator />
                    </ToolBar>
                    <TextBox Grid.Row="1" Text="{Binding ReceivedData}" AcceptsReturn="True" IsReadOnly="True" FontFamily="Courier New" FontSize="12" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Visible" />
                </Grid>
            </TabItem>
        </TabControl>

        <GridSplitter Grid.Row="3" Background="Blue" Height="3" HorizontalAlignment="Stretch" ShowsPreview="True" VerticalAlignment="Top" />

        <StatusBar Grid.Row="4">

            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Label Content="Zoom:" />
                    <Label Content="{Binding Zoom}" />
                </StackPanel>
            </StatusBarItem>

            <Separator />

            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Label Content="CenterPosition:" />
                    <Label Content="{Binding Latitude}" ContentStringFormat="F8" />
                    <Label Content="/" />
                    <Label Content="{Binding Longitude}" ContentStringFormat="F8" />
                </StackPanel>
            </StatusBarItem>

            <Separator />

            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Label Content="RFDevices:" />
                    <Label Content="{Binding RFDevicesCollection.Count}" />
                </StackPanel>
            </StatusBarItem>

            <Separator />

            <!--<StatusBarItem Background="LightYellow">
                <StackPanel Orientation="Horizontal">
                    <Label Content="UDPHost:" />
                    <TextBox Text="{Binding UDPHost,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="100" TextAlignment="Center" VerticalContentAlignment="Center" />
                </StackPanel>
            </StatusBarItem>

            <Separator />

            <StatusBarItem Background="LightYellow">
                <StackPanel Orientation="Horizontal">
                    <Label Content="UDPPort:" />
                    <TextBox Text="{Binding UDPPort,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="50" TextAlignment="Right" VerticalContentAlignment="Center" />
                </StackPanel>
            </StatusBarItem>

            <Separator />-->

            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Label Content="UDPDelay:" />
                    <TextBox Text="{Binding UDPDelay,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="60" TextAlignment="Right" VerticalContentAlignment="Center" />
                </StackPanel>
            </StatusBarItem>

            <Separator />
            <StatusBarItem />
        </StatusBar>
    </Grid>
</Window>
