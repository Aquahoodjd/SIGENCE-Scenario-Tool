<Window x:Class="TransmitterTool.Windows.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:gmap="clr-namespace:GMap.NET.WindowsPresentation;assembly=GMap.NET.WindowsPresentation" xmlns:provider="clr-namespace:GMap.NET.MapProviders;assembly=GMap.NET.Core" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:cmd="clr-namespace:TransmitterTool.Commands" xmlns:models="clr-namespace:TransmitterTool.Models" mc:Ignorable="d" Title="TransmitterTool" Height="900" Width="900" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <ObjectDataProvider x:Key="eRxTxType" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:RxTxType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="eAntennaType" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:AntennaType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Menu Grid.Row="0">
            <MenuItem Header="_TransmitterTool">
                <MenuItem Header="_New File" Command="{x:Static ApplicationCommands.New}" />
                <Separator />
                <MenuItem Header="_Open File" Command="{x:Static ApplicationCommands.Open}" />
                <Separator />
                <MenuItem Header="_Save File" Command="{x:Static ApplicationCommands.Save}" />
                <MenuItem Header="_Save File As" Command="{x:Static ApplicationCommands.SaveAs}" />
                <Separator />
                <MenuItem Header="Quit" Command="{x:Static ApplicationCommands.Close}" />
            </MenuItem>
            <MenuItem Header="_Actions">
                <MenuItem Header="_Create Transmitter" Command="{x:Static cmd:RegisteredCommands.CreateTransmitter}" />
                <Separator />
                <MenuItem Header="_Export Transmitter" Command="{x:Static cmd:RegisteredCommands.ExportTransmitter}" />
                <MenuItem Header="_Import Transmitter" Command="{x:Static cmd:RegisteredCommands.ImportTransmitter}" />
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Header="_Create Screenshot From Map" Command="{x:Static cmd:RegisteredCommands.CreateScreenshot}" />
            </MenuItem>
            <MenuItem Header="_Extras">
                <MenuItem Header="_Settings" IsEnabled="False" />
            </MenuItem>
        </Menu>

        <ToolBar Grid.Row="1">
            <!--<Button Content="Create Transmitter" Command="{x:Static cmd:RegisteredCommands.CreateTransmitter}" />
            <Separator />-->
            <Label Content="MapType" />
            <ComboBox x:Name="cbMapProvider" Width="120" SelectedItem="{Binding MapControl.MapProvider, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Separator />
            <ToggleButton Content="Display Center" IsChecked="{Binding ShowCenter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Separator />
        </ToolBar>

        <gmap:GMapControl x:Name="mcMapControl" Grid.Row="2" />

        <ScrollViewer Grid.Row="3">
            <DataGrid ItemsSource="{Binding TransmitterCollection}" IsReadOnly="False" AlternationCount="2" AlternatingRowBackground="AliceBlue" AutoGenerateColumns="False" FontFamily="Courier New" FontSize="14" MouseDoubleClick="DataGrid_MouseDoubleClick">
                <DataGrid.Columns>

                    <DataGridTextColumn Header="Name" Binding="{Binding Name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Latitude" Binding="{Binding Latitude}" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Longitude" Binding="{Binding Longitude}" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!--           -->

                    <DataGridTextColumn Header="Altitude" Binding="{Binding Altitude,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Roll" Binding="{Binding Roll,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Pitch" Binding="{Binding Pitch,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Yaw" Binding="{Binding Yaw,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>


                    <DataGridComboBoxColumn Header="RxTxType" SelectedItemBinding="{Binding RxTxType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource eRxTxType}}">
                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                    </DataGridComboBoxColumn>


                    <DataGridComboBoxColumn Header="AntennaType" SelectedItemBinding="{Binding AntennaType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource eAntennaType}}">
                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                    </DataGridComboBoxColumn>

                    <DataGridTextColumn Header="CenterFrequency" Binding="{Binding CenterFrequency,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Bandwith" Binding="{Binding Bandwith,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Gain" Binding="{Binding Gain,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="SignalToNoiseRatio" Binding="{Binding SignalToNoiseRatio,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!--           -->

                    <DataGridTextColumn Header="Remark" Binding="{Binding Remark,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                </DataGrid.Columns>
            </DataGrid>
        </ScrollViewer>

        <GridSplitter Grid.Row="3" Background="Blue" Height="3" HorizontalAlignment="Stretch" ShowsPreview="True" VerticalAlignment="Top" />

        <StatusBar Grid.Row="4">

            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Label Content="Current Zoom:" />
                    <Label Content="{Binding MapControl.Zoom}" />
                </StackPanel>
            </StatusBarItem>

            <Separator />

            <!--<StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Label Content="Creating Transmitter:" />
                    <Label Content="{Binding CreatingTransmitter}" />
                </StackPanel>
            </StatusBarItem>

            <Separator />-->

            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Label Content="Transmitter Count:" />
                    <Label Content="{Binding TransmitterCollection.Count}" />
                </StackPanel>
            </StatusBarItem>

            <!--<Separator />

            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Label Content="ShowCenter:" />
                    <Label Content="{Binding ShowCenter}" />
                </StackPanel>
            </StatusBarItem>-->

            <Separator />

            <StatusBarItem />
        </StatusBar>
    </Grid>
</Window>
