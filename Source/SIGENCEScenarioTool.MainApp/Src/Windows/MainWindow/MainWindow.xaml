<Window x:Class="SIGENCEScenarioTool.Windows.MainWindow.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:gmap="clr-namespace:GMap.NET.WindowsPresentation;assembly=GMap.NET.WindowsPresentation" xmlns:provider="clr-namespace:GMap.NET.MapProviders;assembly=GMap.NET.Core" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore" xmlns:cmd="clr-namespace:SIGENCEScenarioTool.Commands" xmlns:models="clr-namespace:SIGENCEScenarioTool.Models" xmlns:geodb="clr-namespace:SIGENCEScenarioTool.Models.Database.GeoDb" mc:Ignorable="d" Title="SIGENCE Scenario Tool" Height="900" Width="900" MinWidth="800" MinHeight="600" WindowStartupLocation="CenterScreen" WindowState="Maximized" Loaded="MainWindow_Loaded" Closed="MainWindow_Closed">
    <Window.Resources>

        <Image x:Key="ADD" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/add.png" />
        <Image x:Key="CAMERA" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/camera.png" />
        <Image x:Key="SEND" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/client_network.png" />
        <Image x:Key="COPY" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/copy.png" />
        <Image x:Key="DELETE" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/delete.png" />
        <Image x:Key="IMPORT" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/document_into.png" />
        <Image x:Key="EXPORT" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/document_out.png" />
        <Image x:Key="NEW" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/document_plain.png" />
        <Image x:Key="EXIT" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/exit.png" />
        <Image x:Key="ZOOMTO" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/fit_to_size.png" />
        <Image x:Key="SAVE" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/floppy_disk.png" />
        <Image x:Key="OPEN" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/folder_document.png" />
        <Image x:Key="PASTE" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/paste.png" />
        <Image x:Key="SAVEAS" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/save_as.png" />
        <Image x:Key="HELP" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/help.png" />
        <Image x:Key="CHART" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/chart_bubble.png" />
        <Image x:Key="SATELLITE" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/satellite.png" />
        <Image x:Key="REFRESH" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/refresh.png" />
        <Image x:Key="TEXT_RICH_COLORED" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/text_rich_colored.png" />
        <Image x:Key="EDIT" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/edit.png" />
        <Image x:Key="NUT_AND_BOLT" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/nut_and_bolt.png" />
        <Image x:Key="GARBAGE" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/garbage.png" />
        <Image x:Key="MOVE" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/move.png" />
        <Image x:Key="PIN_BLUE" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/pin_blue.png" />
        <Image x:Key="EARTH" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/earth.png" />
        <Image x:Key="MAGIC_WAND" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/magic_wand.png" />
        <Image x:Key="LED_WHITE" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/led_white.png" />
        <Image x:Key="SERVER_FROM_CLIENT" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/server_from_client.png" />
        <Image x:Key="SERVER_TO_CLIENT" Width="16" Height="16" x:Shared="False" Source="/SIGENCEScenarioTool;component/Images/server_to_client.png" />


        <ObjectDataProvider x:Key="eRxTxType" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:RxTxType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>


        <ObjectDataProvider x:Key="eAntennaType" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:AntennaType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>


        <ObjectDataProvider x:Key="eGeoTag" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="geodb:GeoTag" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <!--<ObjectDataProvider x:Key="eMouseButton" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="input:MouseButton" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>-->

    </Window.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Menu Grid.Row="0">
            <MenuItem Header="_SIGENCE Scenario Tool">
                <MenuItem Header="_New File" Icon="{StaticResource NEW}" Command="{x:Static ApplicationCommands.New}" />
                <Separator />
                <MenuItem Header="_Open File" Icon="{StaticResource OPEN}" Command="{x:Static ApplicationCommands.Open}" />
                <Separator />
                <MenuItem Header="_Save File" Icon="{StaticResource SAVE}" Command="{x:Static ApplicationCommands.Save}" />
                <MenuItem Header="_Save File As" Icon="{StaticResource SAVEAS}" Command="{x:Static ApplicationCommands.SaveAs}" />
                <Separator />
                <MenuItem Header="Quit" Icon="{StaticResource EXIT}" Command="{x:Static ApplicationCommands.Close}" />
            </MenuItem>
            <MenuItem Header="_Actions">
                <MenuItem Header="_Create RFDevice" Icon="{StaticResource ADD}" Command="{x:Static cmd:RegisteredCommands.CreateRFDevice}" />
                <MenuItem Header="_Delete RFDevice" Icon="{StaticResource DELETE}" Command="{x:Static cmd:RegisteredCommands.DeleteRFDevice}" />
                <Separator />
                <MenuItem Header="Copy RFDevice" Icon="{StaticResource COPY}" Command="{x:Static cmd:RegisteredCommands.CopyRFDevice}" />
                <MenuItem Header="Paste RFDevice" Icon="{StaticResource PASTE}" Command="{x:Static cmd:RegisteredCommands.PasteRFDevice}" />
                <Separator />
                <MenuItem Header="Move RFDevice" IsCheckable="True" Icon="{StaticResource MOVE}" IsChecked="{Binding IsDeviceMovingMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Separator />
                <MenuItem Header="_Export RFDevices" Icon="{StaticResource EXPORT}" Command="{x:Static cmd:RegisteredCommands.ExportRFDevice}" />
                <MenuItem Header="_Import RFDevices" Icon="{StaticResource IMPORT}" Command="{x:Static cmd:RegisteredCommands.ImportRFDevice}" />
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Header="Sync Map And Grid Selection" IsCheckable="True" Icon="{StaticResource NUT_AND_BOLT}" IsChecked="{Binding SyncMapAndGrid,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                <MenuItem Header="_Zoom To RFDevice" Icon="{StaticResource ZOOMTO}" Command="{x:Static cmd:RegisteredCommands.ZoomToRFDevice}" />
                <MenuItem Header="_Create Screenshot From Map" Icon="{StaticResource CAMERA}" Command="{x:Static cmd:RegisteredCommands.CreateScreenshot}" />
                <Separator />
                <MenuItem Header="_Open In Google Maps" Icon="{StaticResource PIN_BLUE}" Click="MenuItem_OpenInGoogleMaps_Click" />
                <MenuItem Header="_Send Data via UDP" Icon="{StaticResource SEND}" Command="{x:Static cmd:RegisteredCommands.SendDataUDP}" />
                <Separator />
                <MenuItem Header="Create Scenario _Report" Icon="{StaticResource TEXT_RICH_COLORED}" Click="MenuItem_ScenarioReport_Click" />
            </MenuItem>
            <MenuItem Header="_Extras">
                <MenuItem Header="_Restore Initial Map Values" Icon="{StaticResource NUT_AND_BOLT}" Click="MenuItem_RestoreInitialMapValues_Click" />
                <MenuItem Header="_Save Initial Map Values" Icon="{StaticResource NUT_AND_BOLT}" Click="MenuItem_SaveInitialMapValues_Click" />
                <Separator />
                <MenuItem Header="_Edit Settings" Icon="{StaticResource NUT_AND_BOLT}" Command="{x:Static cmd:RegisteredCommands.OpenSettings}" />
            </MenuItem>
            <MenuItem Header="_Test">
                <MenuItem Header="_Charting Test" Icon="{StaticResource CHART}" Click="MenuItem_ChartingTest_Click" />
                <Separator />
                <MenuItem Header="Create Randomized RFDevices" Icon="{StaticResource SATELLITE}">
                    <MenuItem Header="50" Tag="50" Icon="{StaticResource SATELLITE}" Click="MenuItem_CreateSomeRandomizedRFDevices_Click" />
                    <MenuItem Header="100" Tag="100" Icon="{StaticResource SATELLITE}" Click="MenuItem_CreateSomeRandomizedRFDevices_Click" />
                    <MenuItem Header="200" Tag="200" Icon="{StaticResource SATELLITE}" Click="MenuItem_CreateSomeRandomizedRFDevices_Click" />
                    <MenuItem Header="500" Tag="500" Icon="{StaticResource SATELLITE}" Click="MenuItem_CreateSomeRandomizedRFDevices_Click" />
                    <MenuItem Header="1000" Tag="1000" Icon="{StaticResource SATELLITE}" Click="MenuItem_CreateSomeRandomizedRFDevices_Click" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Help">
                <!--<MenuItem Header="_Display Help" Command="{x:Static ApplicationCommands.Help}" IsEnabled="False" />-->
                <MenuItem Header="_Cheat Sheet" Icon="{StaticResource HELP}" Command="{x:Static cmd:RegisteredCommands.OpenCheatSheet}" />
                <MenuItem Header="_Open Wiki" Icon="{StaticResource HELP}" Click="MenuItem_OpenWiki_Click" />
                <!--<MenuItem Header="_About" IsEnabled="False" />-->
            </MenuItem>
        </Menu>

        <ToolBar Grid.Row="1">
            <Label Content="MapProvider" />
            <ComboBox x:Name="cbMapProvider" Width="120" SelectedItem="{Binding MapProvider, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Here You Can Change The MapProvider For The Map." Margin="3" />
            <ToggleButton Content="+" Foreground="Red" FontWeight="ExtraBold" IsChecked="{Binding ShowCenter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Separator />
            <Button Content="{StaticResource ADD}" ToolTip="Create RFDevice" Command="{x:Static cmd:RegisteredCommands.CreateRFDevice}" />
            <Separator />
            <Button Content="{StaticResource DELETE}" ToolTip="Delete RFDevice" Command="{x:Static cmd:RegisteredCommands.DeleteRFDevice}" />
            <Separator />
            <ToggleButton Content="{StaticResource MOVE}" ToolTip="Move RFDevice" IsChecked="{Binding IsDeviceMovingMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Separator />
            <Button Content="{StaticResource COPY}" ToolTip="Copy RFDevice" Command="{x:Static cmd:RegisteredCommands.CopyRFDevice}" />
            <Separator />
            <Button Content="{StaticResource PASTE}" ToolTip="Paste RFDevice" Command="{x:Static cmd:RegisteredCommands.PasteRFDevice}" />
            <Separator />
            <Button Content="{StaticResource ZOOMTO}" ToolTip="Zoom To RFDevice" Command="{x:Static cmd:RegisteredCommands.ZoomToRFDevice}" />
            <Separator />
            <ToggleButton Content="{StaticResource NUT_AND_BOLT}" ToolTip="Sync Map And Grid Selection" IsChecked="{Binding SyncMapAndGrid,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
            <Separator />
            <Button Content="{StaticResource CAMERA}" ToolTip="Create Screenshot" Command="{x:Static cmd:RegisteredCommands.CreateScreenshot}" />
            <Separator />
            <ToggleButton Content="{StaticResource SERVER_FROM_CLIENT}" ToolTip="Receive Data Via UDP" IsChecked="{Binding IsReceiveDataUDP,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
            <Button Content="{StaticResource SERVER_TO_CLIENT}" ToolTip="Send Data Via UDP" Command="{x:Static cmd:RegisteredCommands.SendDataUDP}" />
            <Separator />
        </ToolBar>

        <TabControl Grid.Row="2">
            <TabItem x:Name="tiMap">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="{StaticResource EARTH}" />
                        <Label Content="Map" />
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <!--<RowDefinition Height="Auto" />-->
                    </Grid.RowDefinitions>

                    <gmap:GMapControl x:Name="mcMapControl" Grid.Row="0" OnPositionChanged="MapControl_OnPositionChanged" MouseLeftButtonDown="MapControl_MouseLeftButtonDown" OnMapZoomChanged="MapControl_OnMapZoomChanged" />

                    <DataGrid x:Name="dgRFDevices" Grid.Row="1" ItemsSource="{Binding RFDevicesCollection}" IsReadOnly="False" AlternationCount="2" AlternatingRowBackground="AliceBlue" AutoGenerateColumns="False" FontFamily="Courier New" FontSize="14" CanUserAddRows="False" CanUserDeleteRows="False" SelectionMode="Extended" KeyDown="DataGrid_KeyDown" BeginningEdit="DataGrid_BeginningEdit" CellEditEnding="DataGrid_CellEditEnding" SelectionChanged="DataGrid_SelectionChanged">

                        <DataGrid.CommandBindings>

                            <CommandBinding Command="{x:Static ApplicationCommands.Copy}" CanExecute="DataGrid_CommandBinding_CanExecute_Copy" Executed="DataGrid_Execute_Copy" />
                            <CommandBinding Command="{x:Static ApplicationCommands.Paste}" CanExecute="DataGrid_CommandBinding_CanExecute_Paste" Executed="DataGrid_Execute_Paste" />
                        </DataGrid.CommandBindings>

                        <DataGrid.Columns>

                            <DataGridCheckBoxColumn Header="" Binding="{Binding IsMarked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGridCheckBoxColumn.ElementStyle>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridCheckBoxColumn.ElementStyle>
                            </DataGridCheckBoxColumn>

                            <DataGridTextColumn Header="Id" Binding="{Binding Id,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Name" Binding="{Binding Name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="StartTime" Binding="{Binding StartTime,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Latitude" Binding="{Binding Latitude,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Longitude" Binding="{Binding Longitude,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Altitude" Binding="{Binding Altitude,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Roll" Binding="{Binding Roll,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Pitch" Binding="{Binding Pitch,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Yaw" Binding="{Binding Yaw,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>


                            <DataGridComboBoxColumn Header="RxTxType" SelectedItemBinding="{Binding RxTxType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource eRxTxType}}">
                                <DataGridComboBoxColumn.ElementStyle>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                            </DataGridComboBoxColumn>

                            <DataGridComboBoxColumn Header="AntennaType" SelectedItemBinding="{Binding AntennaType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource eAntennaType}}">
                                <DataGridComboBoxColumn.ElementStyle>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                            </DataGridComboBoxColumn>

                            <DataGridTextColumn Header="CenterFrequency" Binding="{Binding CenterFrequency,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Bandwith" Binding="{Binding Bandwith,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Gain" Binding="{Binding Gain,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="SignalToNoiseRatio" Binding="{Binding SignalToNoiseRatio,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="XPos" Binding="{Binding XPos,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="YPos" Binding="{Binding YPos,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="ZPos" Binding="{Binding ZPos,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Remark" Binding="{Binding Remark,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                        </DataGrid.Columns>
                    </DataGrid>

                    <GridSplitter Grid.Row="1" Background="Blue" Height="3" ShowsPreview="True" HorizontalAlignment="Stretch" VerticalAlignment="Top" />
                </Grid>
            </TabItem>


            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="{StaticResource TEXT_RICH_COLORED}" />
                        <Label Content="Description" />
                    </StackPanel>
                </TabItem.Header>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <ToolBar Grid.Row="0">
                        <ToggleButton Content="{StaticResource EDIT}" ToolTip="Edit Scenario Description" Click="ToogleButton_EditScenarioDescription_Click" />
                        <Button Content="{StaticResource MAGIC_WAND}" IsEnabled="{Binding ScenarioDescriptionEditMode}" ToolTip="Converts The German Umlauts To HTML" Click="Button_HtmlConvertGermanUmlauts_Click" />
                        <Separator />
                        <Button Content="{StaticResource HELP}" ToolTip="Open The W3 School Page For HTML" Click="Button_HtmlHelp_Click" />
                        <!--<Menu IsEnabled="{Binding ScenarioDescriptionEditMode}">
                                <MenuItem Header="Font">
                                    <MenuItem Header="Bold" Tag="b" Click="MenuItem_InsertHtmlSnippet_Click" />
                                    <MenuItem Header="Cursiv" Tag="i" Click="MenuItem_InsertHtmlSnippet_Click" />
                                    <MenuItem Header="Underline" Tag="u" Click="MenuItem_InsertHtmlSnippet_Click" />
                                    <MenuItem Header="Preformatted" Tag="pre" Click="MenuItem_InsertHtmlSnippet_Click" />
                                </MenuItem>
                                <MenuItem Header="Table">
                                    <MenuItem Header="Table" Tag="table" Click="MenuItem_InsertHtmlSnippet_Click" />
                                    <MenuItem Header="Row" Tag="tr" Click="MenuItem_InsertHtmlSnippet_Click" />
                                    <MenuItem Header="Header" Tag="th" Click="MenuItem_InsertHtmlSnippet_Click" />
                                    <MenuItem Header="Column" Tag="td" Click="MenuItem_InsertHtmlSnippet_Click" />
                                </MenuItem>
                                <MenuItem Header="Header">
                                    <MenuItem Header="H1" Tag="h1" Click="MenuItem_InsertHtmlSnippet_Click" />
                                    <MenuItem Header="H2" Tag="h2" Click="MenuItem_InsertHtmlSnippet_Click" />
                                    <MenuItem Header="H3" Tag="h3" Click="MenuItem_InsertHtmlSnippet_Click" />
                                    <MenuItem Header="H4" Tag="h4" Click="MenuItem_InsertHtmlSnippet_Click" />
                                    <MenuItem Header="H5" Tag="h5" Click="MenuItem_InsertHtmlSnippet_Click" />
                                    <MenuItem Header="H6" Tag="h6" Click="MenuItem_InsertHtmlSnippet_Click" />
                                </MenuItem>
                                <MenuItem Header="Misc">
                                    <MenuItem Header="Line Break" Tag="br" Click="MenuItem_InsertHtmlSnippet_Click" />
                                    <MenuItem Header="Horizontal Line" Tag="hr" Click="MenuItem_InsertHtmlSnippet_Click" />
                                    <MenuItem Header="Image" Tag="image" Click="MenuItem_InsertHtmlSnippet_Click" />
                                    <MenuItem Header="Link" Tag="link" Click="MenuItem_InsertHtmlSnippet_Click" />
                                </MenuItem>
                            </Menu>-->
                    </ToolBar>
                    <WebBrowser x:Name="wbScenarioDescription" Grid.Row="1" Visibility="Visible" />
                    <TextBox x:Name="tbScenarioDescription" Grid.Row="1" Text="{Binding ScenarioDescription}" AcceptsReturn="True" AcceptsTab="True" IsReadOnly="false" FontFamily="Courier New" FontSize="12" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Visible" Visibility="Hidden" />
                </Grid>
            </TabItem>


            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="{StaticResource EARTH}" />
                        <Label Content="GeoNodes" />
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <ToolBar Grid.Row="0">
                        <CheckBox Content="Name:" IsChecked="{Binding UseNameFilter,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox Text="{Binding NameFilter,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="120" />
                        <Separator />
                        <CheckBox Content="GeoTag:" IsChecked="{Binding UseGeoTagFilter,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                        <ComboBox ItemsSource="{Binding Source={StaticResource eGeoTag}}" SelectedItem="{Binding GeoTagFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="80" IsEnabled="{Binding UseGeoTagFilter}" />
                    </ToolBar>

                    <DataGrid Grid.Row=" 1" ItemsSource="{Binding GeoNodeCollection}" IsReadOnly="True" SelectionMode="Single" AlternationCount="2" AlternatingRowBackground="AliceBlue" AutoGenerateColumns="False" FontFamily="Courier New" FontSize="14" CanUserAddRows="False" CanUserDeleteRows="False" MouseDoubleClick="DataGridGeoData_MouseDoubleClick">
                        <DataGrid.Columns>

                            <DataGridTextColumn Header="Latitude" Binding="{Binding Latitude}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Longitude" Binding="{Binding Longitude}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Name" Binding="{Binding Name}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>


                            <DataGridTextColumn Header="Tag" Binding="{Binding Tag}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Value" Binding="{Binding Value}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>


            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="{StaticResource NUT_AND_BOLT}" />
                        <Label Content="Messages" />
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <ToolBar Grid.Row="0">
                        <Button Content="{StaticResource LED_WHITE}" ToolTip="Clear" Click="Button_Acknowledge_Click" />
                        <Separator />
                        <Button Content="{StaticResource GARBAGE}" ToolTip="Clear" Click="Button_ClearDebugOutput_Click" />
                    </ToolBar>
                    <TextBox Grid.Row="1" Text="{Binding DebugOutput}" AcceptsReturn="True" IsReadOnly="True" FontFamily="Courier New" FontSize="12" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Visible" />
                </Grid>
            </TabItem>

        </TabControl>
        <!--
        <Grid Grid.Row="3" Margin="5">

            <TabControl Grid.Column="1">
                <TabItem Header="Scenario Description">
                </TabItem>
            </TabControl>

            <GridSplitter Grid.Column="1" Background="Blue" Width="3" ShowsPreview="True" HorizontalAlignment="Left" VerticalAlignment="Stretch" />
        </Grid>
                -->
        <!--<GridSplitter Grid.Row="3" Background="Blue" Height="3" ShowsPreview="True" HorizontalAlignment="Stretch" VerticalAlignment="Top" />-->

        <StatusBar Grid.Row="3">

            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Label Content="Zoom:" />
                    <Label Content="{Binding Zoom}" />
                </StackPanel>
            </StatusBarItem>

            <Separator />

            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Label Content="CenterPosition:" />
                    <Label Content="{Binding Latitude}" ContentStringFormat="F8" />
                    <Label Content="/" />
                    <Label Content="{Binding Longitude}" ContentStringFormat="F8" />
                </StackPanel>
            </StatusBarItem>

            <Separator />

            <StatusBarItem>
                <ProgressBar Width="80" Height="10" IsIndeterminate="{Binding IsTileLoading}" ToolTip="Indicator Whether Tiles Are Loaded" />
            </StatusBarItem>

            <Separator />

            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Label Content="RFDevices:" />
                    <Label Content="{Binding RFDevicesCollection.Count}" />
                </StackPanel>
            </StatusBarItem>

            <Separator />

            <!--<StatusBarItem Background="LightYellow">
                <StackPanel Orientation="Horizontal">
                    <Label Content="UDPHost:" />
                    <TextBox Text="{Binding UDPHost,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="100" TextAlignment="Center" VerticalContentAlignment="Center" />
                </StackPanel>
            </StatusBarItem>

            <Separator />

            <StatusBarItem Background="LightYellow">
                <StackPanel Orientation="Horizontal">
                    <Label Content="UDPPort:" />
                    <TextBox Text="{Binding UDPPort,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="50" TextAlignment="Right" VerticalContentAlignment="Center" />
                </StackPanel>
            </StatusBarItem>

            <Separator />-->

            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Label Content="UDPDelay:" />
                    <TextBox Text="{Binding UDPDelay,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="60" TextAlignment="Right" VerticalContentAlignment="Center" />
                </StackPanel>
            </StatusBarItem>

            <Separator />

            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Label Content="GeoNodes:" />
                    <Label Content="{Binding CurrentNodes}" />
                    <Label Content="/" />
                    <Label Content="{Binding GeoNodeCollection.Count}" />
                </StackPanel>
            </StatusBarItem>

            <Separator />

            <StatusBarItem />
        </StatusBar>
    </Grid>
</Window>
